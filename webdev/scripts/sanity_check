#!/bin/bash -u

BASE_DIR=$(cd $(dirname "$0") && pwd -P)
SCRIPT_NAME=$(basename "$0")

fail() {
	echo "$@" >&2
	exit 101
}

usage() {
	cat <<- EOI
	usage: $SCRIPT_NAME [GLOB] [GLOB] [args]

    Scan matched files (default: *.php), defaulting to \$PWD.

	arguments:
		-h|--help|-H      This information.
		-v|--verbose      Print verbose debugging information to standard error.
	EOI
}

debug() {
    [ $verbose -eq 1 ] && echo -en "$@" >&2
}

verbose=0
error_count=0
tmp_file="/tmp/.$SCRIPT_NAME.$$"
globs=""

# arg collection!
while [ $# -gt 0 ]; do
	arg="$1"
	shift
	case "$arg" in
		-h|--help|-H)
			usage
			exit
			;;
		-v|--verbose)
			verbose=1
			;;
		*)
			globs="$arg"
			;;
	esac
done

[ "$globs" == '' ] && globs='*.php'

find -type f -iname "$globs" > "$tmp_file" 2>/dev/null || fail "Failed to locate PHP files."
while read file; do
    debug "Checking '$file': "
    result=$(php -d display_errors=1 -l "$file" 2>&1) || let error_count+=1
    if echo "$result" | grep -q 'No syntax errors detected'; then
        debug " Ok\n"
    else
        echo "$result"
    fi
done < "$tmp_file"
checked=$(wc -l "$tmp_file" | awk '{print $1}')
rm -f "$tmp_file"

if [ $error_count -gt 0 ]; then
    fail "$error_count errors found."
elif [ $checked -eq 0 ]; then
    fail "No files found matching '$globs'."
else
    echo -e "---------------------\nOk! (checked: $checked)"
fi

exit 0
